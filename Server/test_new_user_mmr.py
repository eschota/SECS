#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json
import time
import random
import string

def generate_random_email():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π email"""
    random_string = ''.join(random.choices(string.ascii_lowercase + string.digits, k=10))
    return f"test_{random_string}@example.com"

def generate_random_username():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    random_string = ''.join(random.choices(string.ascii_lowercase + string.digits, k=8))
    return f"TestUser_{random_string}"

def test_new_user_registration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç MMR"""
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    email = generate_random_email()
    username = generate_random_username()
    password = "test123456"
    
    register_data = {
        "username": username,
        "email": email,
        "password": password,
        "avatar": "https://www.gravatar.com/avatar/?d=mp"
    }
    
    print(f"üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    print(f"üìß Email: {email}")
    print(f"üë§ Username: {username}")
    
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        response = requests.post(
            "https://renderfin.com/api-game-player",
            json=register_data,
            timeout=10
        )
        
        if response.status_code == 201:
            user_data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!")
            print(f"üÜî User ID: {user_data['id']}")
            print(f"üìä MMR 1v1: {user_data['mmrOneVsOne']}")
            print(f"üìä MMR 2v2: {user_data['mmrTwoVsTwo']}")
            print(f"üìä MMR FFA: {user_data['mmrFourPlayerFFA']}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ MMR –∑–Ω–∞—á–µ–Ω–∏–π
            expected_mmr = 500
            errors = []
            
            if user_data['mmrOneVsOne'] != expected_mmr:
                errors.append(f"MMR 1v1: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected_mmr}, –ø–æ–ª—É—á–µ–Ω–æ {user_data['mmrOneVsOne']}")
            
            if user_data['mmrTwoVsTwo'] != expected_mmr:
                errors.append(f"MMR 2v2: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected_mmr}, –ø–æ–ª—É—á–µ–Ω–æ {user_data['mmrTwoVsTwo']}")
            
            if user_data['mmrFourPlayerFFA'] != expected_mmr:
                errors.append(f"MMR FFA: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected_mmr}, –ø–æ–ª—É—á–µ–Ω–æ {user_data['mmrFourPlayerFFA']}")
            
            if errors:
                print(f"‚ùå –û—à–∏–±–∫–∏ MMR:")
                for error in errors:
                    print(f"   - {error}")
                return False
            else:
                print(f"‚úÖ –í—Å–µ MMR –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã (500)!")
                return True
        
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False

def test_login():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ª–æ–≥–∏–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã
    login_data = {
        "email": "test@example.com",
        "password": "password123"
    }
    
    print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    try:
        response = requests.post(
            "https://renderfin.com/api-game-player/login",
            json=login_data,
            timeout=10
        )
        
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω!")
            print(f"üÜî User ID: {user_data['id']}")
            print(f"üë§ Username: {user_data['username']}")
            print(f"üìä MMR 1v1: {user_data['mmrOneVsOne']}")
            print(f"üìä MMR 2v2: {user_data['mmrTwoVsTwo']}")
            print(f"üìä MMR FFA: {user_data['mmrFourPlayerFFA']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MMR –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 50)
    
    # –ñ–¥–µ–º —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    time.sleep(3)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    success = test_new_user_registration()
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç 500 MMR!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MMR.")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω
    test_login()
    
    print("\nüîö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.") 