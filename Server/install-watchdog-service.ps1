# ====================================================================
# üîß WINDOWS SERVICE INSTALLER FOR SERVER WATCHDOG
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–æ—Ç—á–¥–æ–≥ –∫–∞–∫ Windows —Å–ª—É–∂–±—É –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
# ====================================================================

param(
    [switch]$Install,
    [switch]$Uninstall,
    [switch]$Start,
    [switch]$Stop,
    [switch]$Status
)

$ServiceName = "ServerWatchdog"
$ServiceDisplayName = "Server Watchdog Service"
$ServiceDescription = "Monitors and automatically restarts the game server"
$ServicePath = "C:\SECS\Server"
$WatchdogScript = "C:\SECS\Server\server-watchdog.ps1"
$LogPath = "C:\SECS\Code\service-installer.log"

function Write-ServiceLog {
    param([string]$Message, [string]$Level = "INFO")
    
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logEntry = "$timestamp [$Level] $Message"
    Write-Host $logEntry
    Add-Content -Path $LogPath -Value $logEntry -Encoding UTF8
}

function Test-AdminRights {
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    return $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
}

function Install-WatchdogService {
    Write-ServiceLog "üîß Installing Server Watchdog as Windows Service..." "INFO"
    
    if (!(Test-AdminRights)) {
        Write-ServiceLog "‚ùå Administrator rights required for service installation" "ERROR"
        return $false
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–ª—É–∂–±–∞
    $existingService = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
    if ($existingService) {
        Write-ServiceLog "‚ö†Ô∏è Service '$ServiceName' already exists. Uninstalling first..." "WARN"
        Uninstall-WatchdogService
    }
    
    try {
        # –°–æ–∑–¥–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
        $serviceScriptContent = @"
# Windows Service Wrapper for Server Watchdog
Set-Location "$ServicePath"
& powershell.exe -ExecutionPolicy Bypass -File "$WatchdogScript" -CheckInterval 30
"@
        
        $serviceScriptPath = "$ServicePath\watchdog-service-wrapper.ps1"
        Set-Content -Path $serviceScriptPath -Value $serviceScriptContent -Encoding UTF8
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª—É–∂–±—É —Å –ø–æ–º–æ—â—å—é sc.exe
        $binPath = "powershell.exe -ExecutionPolicy Bypass -File `"$serviceScriptPath`""
        
        $result = & sc.exe create $ServiceName binPath= $binPath start= auto displayName= "$ServiceDisplayName"
        
        if ($LASTEXITCODE -eq 0) {
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª—É–∂–±—ã
            & sc.exe description $ServiceName "$ServiceDescription"
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ–µ
            & sc.exe failure $ServiceName reset= 86400 actions= restart/30000/restart/60000/restart/120000
            
            Write-ServiceLog "‚úÖ Service installed successfully" "SUCCESS"
            return $true
        }
        else {
            Write-ServiceLog "‚ùå Failed to create service: $result" "ERROR"
            return $false
        }
    }
    catch {
        Write-ServiceLog "‚ùå Error installing service: $_" "ERROR"
        return $false
    }
}

function Uninstall-WatchdogService {
    Write-ServiceLog "üóëÔ∏è Uninstalling Server Watchdog service..." "INFO"
    
    if (!(Test-AdminRights)) {
        Write-ServiceLog "‚ùå Administrator rights required for service uninstallation" "ERROR"
        return $false
    }
    
    try {
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É–∂–±—É –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞
        $service = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
        if ($service -and $service.Status -eq "Running") {
            Write-ServiceLog "üõë Stopping service..." "INFO"
            Stop-Service -Name $ServiceName -Force
            Start-Sleep -Seconds 5
        }
        
        # –£–¥–∞–ª—è–µ–º —Å–ª—É–∂–±—É
        $result = & sc.exe delete $ServiceName
        
        if ($LASTEXITCODE -eq 0) {
            Write-ServiceLog "‚úÖ Service uninstalled successfully" "SUCCESS"
            
            # –£–¥–∞–ª—è–µ–º —Å–ª—É–∂–µ–±–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
            $serviceScriptPath = "$ServicePath\watchdog-service-wrapper.ps1"
            if (Test-Path $serviceScriptPath) {
                Remove-Item $serviceScriptPath -Force
            }
            
            return $true
        }
        else {
            Write-ServiceLog "‚ùå Failed to delete service: $result" "ERROR"
            return $false
        }
    }
    catch {
        Write-ServiceLog "‚ùå Error uninstalling service: $_" "ERROR"
        return $false
    }
}

function Start-WatchdogService {
    Write-ServiceLog "üöÄ Starting Server Watchdog service..." "INFO"
    
    try {
        Start-Service -Name $ServiceName
        Write-ServiceLog "‚úÖ Service started successfully" "SUCCESS"
        return $true
    }
    catch {
        Write-ServiceLog "‚ùå Error starting service: $_" "ERROR"
        return $false
    }
}

function Stop-WatchdogService {
    Write-ServiceLog "üõë Stopping Server Watchdog service..." "INFO"
    
    try {
        Stop-Service -Name $ServiceName -Force
        Write-ServiceLog "‚úÖ Service stopped successfully" "SUCCESS"
        return $true
    }
    catch {
        Write-ServiceLog "‚ùå Error stopping service: $_" "ERROR"
        return $false
    }
}

function Get-WatchdogServiceStatus {
    Write-ServiceLog "üìä Checking Server Watchdog service status..." "INFO"
    
    $service = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
    
    if ($service) {
        Write-ServiceLog "‚úÖ Service Status: $($service.Status)" "INFO"
        Write-ServiceLog "üìã Service Name: $($service.Name)" "INFO"
        Write-ServiceLog "üìã Display Name: $($service.DisplayName)" "INFO"
        Write-ServiceLog "üìã Start Type: $($service.StartType)" "INFO"
        return $true
    }
    else {
        Write-ServiceLog "‚ùå Service not found" "ERROR"
        return $false
    }
}

# ====================================================================
# MAIN EXECUTION
# ====================================================================

Write-ServiceLog "üîß ===== WATCHDOG SERVICE INSTALLER =====" "INFO"

# –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
if (!$Install -and !$Uninstall -and !$Start -and !$Stop -and !$Status) {
    Write-Host "üêï‚Äçü¶∫ Server Watchdog Service Manager"
    Write-Host "=================================="
    Write-Host ""
    Write-Host "Usage:"
    Write-Host "  -Install    Install watchdog as Windows service"
    Write-Host "  -Uninstall  Remove watchdog service"
    Write-Host "  -Start      Start the service"
    Write-Host "  -Stop       Stop the service"
    Write-Host "  -Status     Check service status"
    Write-Host ""
    Write-Host "Examples:"
    Write-Host "  .\install-watchdog-service.ps1 -Install"
    Write-Host "  .\install-watchdog-service.ps1 -Start"
    Write-Host "  .\install-watchdog-service.ps1 -Status"
    exit 0
}

if ($Install) {
    if (Install-WatchdogService) {
        Write-ServiceLog "üéâ Installation completed! You can now start the service." "SUCCESS"
    }
}

if ($Uninstall) {
    if (Uninstall-WatchdogService) {
        Write-ServiceLog "üéâ Uninstallation completed!" "SUCCESS"
    }
}

if ($Start) {
    Start-WatchdogService
}

if ($Stop) {
    Stop-WatchdogService
}

if ($Status) {
    Get-WatchdogServiceStatus
}

Write-ServiceLog "üîß ===== OPERATION COMPLETED =====" "INFO" 