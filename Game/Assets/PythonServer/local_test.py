#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json
import time

# –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
LOCAL_URL = "http://localhost:3329"
ADMIN_TOKEN = "ZXCVBNM,1234567890"

def test_local_server():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ TESTING LOCAL SERVER")
    print("="*40)
    
    try:
        # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        print("Testing main endpoint...")
        response = requests.get(f"{LOCAL_URL}/", timeout=5)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Main endpoint works!")
            data = response.json()
            print(f"Response: {json.dumps(data, indent=2)}")
        else:
            print("‚ùå Main endpoint failed")
            
        # –¢–µ—Å—Ç –ª–æ–±–±–∏
        print("\nTesting lobby endpoint...")
        response = requests.get(f"{LOCAL_URL}/api-game-lobby/", timeout=5)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Lobby endpoint works!")
            data = response.json()
            print(f"Response: {json.dumps(data, indent=2)}")
        else:
            print("‚ùå Lobby endpoint failed")
            
        # –¢–µ—Å—Ç –æ—á–µ—Ä–µ–¥–∏
        print("\nTesting queue endpoint...")
        response = requests.get(f"{LOCAL_URL}/api-game-queue/", timeout=5)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Queue endpoint works!")
            data = response.json()
            print(f"Response: {json.dumps(data, indent=2)}")
        else:
            print("‚ùå Queue endpoint failed")
            
        # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nTesting user registration...")
        user_data = {
            "email": "localtest@example.com",
            "password": "testpass123",
            "nick_name": "LocalTestPlayer"
        }
        response = requests.post(
            f"{LOCAL_URL}/api-game-user/register",
            json=user_data,
            headers={'Content-Type': 'application/json'},
            timeout=5
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 201:
            print("‚úÖ User registration works!")
            data = response.json()
            print(f"Response: {json.dumps(data, indent=2)}")
            return data.get('player_id')
        else:
            print("‚ùå User registration failed")
            if response.status_code == 409:
                print("User already exists - that's ok!")
                return "user_1"  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Cannot connect to local server")
        print("Make sure the server is running on port 3329")
        return None
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return None

def test_queue_with_user(player_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—á–µ—Ä–µ–¥—å —Å —Ä–µ–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    if not player_id:
        return
        
    print(f"\nüéÆ TESTING QUEUE WITH USER: {player_id}")
    print("="*40)
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å
        queue_data = {
            "queue_match_type": 0,  # 1v1
            "player_id": player_id
        }
        response = requests.post(
            f"{LOCAL_URL}/api-game-queue/",
            json=queue_data,
            headers={'Content-Type': 'application/json'},
            timeout=5
        )
        print(f"Add to queue status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Added to queue successfully!")
            data = response.json()
            print(f"Response: {json.dumps(data, indent=2)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –æ—á–µ—Ä–µ–¥–∏
            time.sleep(1)
            response = requests.get(f"{LOCAL_URL}/api-game-queue/player/{player_id}", timeout=5)
            print(f"Queue status check: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"Queue status: {json.dumps(data, indent=2)}")
                
            # –£–¥–∞–ª—è–µ–º –∏–∑ –æ—á–µ—Ä–µ–¥–∏
            remove_data = {"player_id": player_id}
            response = requests.delete(
                f"{LOCAL_URL}/api-game-queue/",
                json=remove_data,
                headers={'Content-Type': 'application/json'},
                timeout=5
            )
            print(f"Remove from queue status: {response.status_code}")
            if response.status_code == 200:
                print("‚úÖ Removed from queue successfully!")
        else:
            print("‚ùå Failed to add to queue")
            
    except Exception as e:
        print(f"‚ùå Queue test error: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ LOCAL SERVER TEST")
    print("="*50)
    
    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
    player_id = test_local_server()
    
    # –¢–µ—Å—Ç –æ—á–µ—Ä–µ–¥–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    test_queue_with_user(player_id)
    
    print("\nüéâ LOCAL TESTING COMPLETED!")
    print("="*50)

if __name__ == "__main__":
    main() 